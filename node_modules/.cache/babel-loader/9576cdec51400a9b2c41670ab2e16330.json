{"ast":null,"code":"var _jsxFileName = \"/Users/nishant/Downloads/react-jz95vw/src/containers/Order.js\";\nimport React, { PureComponent } from 'react';\nimport axios from 'axios';\nimport OrderList from '../components/OrderList';\nimport { getCookies, showNotification } from '../helper';\n/*global chrome*/\n\n/* gloabal webkitNotifications */\n\nclass Order extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderData: ''\n    };\n  }\n\n  componentDidMount() {\n    const sessionToken = '1c9119a9-d999-4f71-a00a-4fa0b7b3530e';\n    {\n      /* getCookies(\"http://www.lenskart.com\", \"frontend\", function(id) {\n      alert(id);\n      }); */\n    }\n    axios.get(`https://api.lenskart.com/v3/orders?page=0&page-size=2`, {\n      headers: {\n        'x-api-client': 'desktop',\n        'x-session-token': sessionToken\n      }\n    }).then(res => {\n      const orderData = res.data.result && res.data.result.orders;\n      this.setState({\n        orderData\n      });\n    }); // Create a simple text notification:\n\n    let notification = webkitNotifications.createNotification('48.png', // icon url - can be relative\n    'Hello!', // notification title\n    'Lorem ipsum...' // notification body text\n    ); // Then show the notification.\n\n    notification.show();\n  }\n\n  render() {\n    const orderData = this.state.orderData;\n    return React.createElement(\"div\", {\n      className: 'my-extension',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, orderData && React.createElement(OrderList, {\n      OrderData: orderData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["/Users/nishant/Downloads/react-jz95vw/src/containers/Order.js"],"names":["React","PureComponent","axios","OrderList","getCookies","showNotification","Order","constructor","props","state","orderData","componentDidMount","sessionToken","get","headers","then","res","data","result","orders","setState","notification","webkitNotifications","createNotification","show","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,WAA7C;AACA;;AACA;;AAEA,MAAMC,KAAN,SAAoBL,aAApB,CAAkC;AAC9BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AACHC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,YAAY,GAAG,sCAArB;AAA6D;AAAE;;;AAEvD;AACRV,IAAAA,KAAK,CAACW,GAAN,CAAW,uDAAX,EAAmE;AAAEC,MAAAA,OAAO,EAAE;AAAE,wBAAgB,SAAlB;AAA6B,2BAAmBF;AAAhD;AAAX,KAAnE,EACCG,IADD,CACMC,GAAG,IAAI;AACX,YAAMN,SAAS,GAAGM,GAAG,CAACC,IAAJ,CAASC,MAAT,IAAmBF,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAgBC,MAArD;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AACD,KAJD,EAJkB,CASlB;;AACA,QAAIW,YAAY,GAAGC,mBAAmB,CAACC,kBAApB,CACf,QADe,EACJ;AACX,YAFe,EAEJ;AACX,oBAHe,CAGG;AAHH,KAAnB,CAVkB,CAelB;;AACAF,IAAAA,YAAY,CAACG,IAAb;AACD;;AACCC,EAAAA,MAAM,GAAG;AAAA,UACGf,SADH,GACiB,KAAKD,KADtB,CACGC,SADH;AAEL,WACI;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,SAAS,IAAI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEA,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADlB,CADJ;AAKH;;AAhC6B;;AAkClC,eAAeJ,KAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport axios from 'axios';\nimport OrderList from '../components/OrderList';\nimport { getCookies, showNotification } from '../helper';\n/*global chrome*/\n/* gloabal webkitNotifications */\n\nclass Order extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            orderData: ''\n        };\n    }\n  componentDidMount() {\n    const sessionToken = '1c9119a9-d999-4f71-a00a-4fa0b7b3530e'; { /* getCookies(\"http://www.lenskart.com\", \"frontend\", function(id) {\n        alert(id);\n    }); */ }\n    axios.get(`https://api.lenskart.com/v3/orders?page=0&page-size=2`, { headers: { 'x-api-client': 'desktop', 'x-session-token': sessionToken } })\n    .then(res => {\n      const orderData = res.data.result && res.data.result.orders;\n      this.setState({ orderData });\n    });\n    // Create a simple text notification:\n    let notification = webkitNotifications.createNotification(\n        '48.png',  // icon url - can be relative\n        'Hello!',  // notification title\n        'Lorem ipsum...'  // notification body text\n    );\n    // Then show the notification.\n    notification.show();\n  }\n    render() {\n        const { orderData } = this.state;\n        return (\n            <div className={'my-extension'}>\n                {orderData && <OrderList OrderData={orderData} />}\n            </div>\n        )\n    }\n}\nexport default Order;"]},"metadata":{},"sourceType":"module"}